package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import vos.ReqI;
import vos.ReqVII;

/**
 * Clase DAO que se conecta la base de datos usando JDBC para resolver los requerimientos de la 
 * aplicación
 * @author Grupo A - 16*/
public class DAOReqVII{

	
	public final static String USUARIO = "ISIS2304A241810";
	/**
	 * Arraylits de recursos que se usan para la ejecución de sentencias SQL
	 */
	private ArrayList<Object> recursos;
	
	/**
	 * Atributo que genera la conexión a la base de datos
	 */
	private Connection conn;

	/**
	 * Metodo constructor que crea DAOIngrediente
	 * <b>post: </b> Crea la instancia del DAO e inicializa el Arraylist de recursos
	 */
	public DAOReqVII() {
		recursos = new ArrayList<Object>();
	}

	/**
	 * Metodo que cierra todos los recursos que estan en el arreglo de recursos
	 * <b>post: </b> Todos los recurso del arreglo de recursos han sido cerrados
	 */
	public void cerrarRecursos() {
		for(Object ob : recursos){
			if(ob instanceof PreparedStatement)
				try {
					((PreparedStatement) ob).close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
		}
	}

	/**
	 * Metodo que inicializa la connection del DAO a la base de datos con la conexión que 
         * entra como parametro.
	 * @param con - connection a la base de datos
	 */
	public void setConn(Connection con){
		this.conn = con;
	}
        
	public ArrayList<ReqVII> getReqVII(int dias, String tipo) throws SQLException 
        {
        ArrayList<ReqVII> resp = new ArrayList<ReqVII>();
        
        String sql = String.format("SET AUTOCOMMIT 0 SET TRANSACTION ISOLATION LEVEL SERIALIZABLE",USUARIO);
		
		PreparedStatement prepStmt = conn.prepareStatement(sql);
		recursos.add(prepStmt);
		ResultSet rs = prepStmt.executeQuery();        
                
	    sql = String.format("SELECT (SYSDATE - INICIO) AS EMPIEZA, (SYSDATE - TERMINACION) AS TERMINA FROM (SELECT * FROM (SELECT SEGMENTO*%2$d AS INICIO FROM (SELECT * FROM ((SELECT SEGMENTO FROM (SELECT COUNT(DISTINCT IDCONTRATO) AS CUENTA, SEGMENTO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO ORDER BY CUENTA DESC) WHERE ROWNUM = 1) UNION ALL (SELECT SEGMENTO FROM (SELECT SUM(MONTO) AS LUKA, SEGMENTO FROM (SELECT (COSTOTOTAL/OCUPACION) AS MONTO, SEGMENTO FROM (SELECT SUM(COSTO) AS COSTOTOTAL, COUNT (IDCONTRATO) AS OCUPACION, SEGMENTO, IDCONTRATO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO, IDCONTRATO)) GROUP BY SEGMENTO ORDER BY SEGMENTO DESC) WHERE ROWNUM = 1)) UNION ALL (SELECT SEGMENTO FROM (SELECT COUNT(DISTINCT IDCONTRATO) AS CUENTA, SEGMENTO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO ORDER BY CUENTA ASC) WHERE ROWNUM = 1))) FULL OUTER JOIN (SELECT (SEGMENTO-1)*%2$d AS TERMINACION FROM (SELECT * FROM ((SELECT SEGMENTO FROM (SELECT COUNT(DISTINCT IDCONTRATO) AS CUENTA, SEGMENTO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO ORDER BY CUENTA DESC) WHERE ROWNUM = 1) UNION ALL (SELECT SEGMENTO FROM (SELECT SUM(MONTO) AS LUKA, SEGMENTO FROM (SELECT (COSTOTOTAL/OCUPACION) AS MONTO, SEGMENTO FROM (SELECT SUM(COSTO) AS COSTOTOTAL, COUNT (IDCONTRATO) AS OCUPACION, SEGMENTO, IDCONTRATO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO, IDCONTRATO)) GROUP BY SEGMENTO ORDER BY SEGMENTO DESC) WHERE ROWNUM = 1)) UNION ALL (SELECT SEGMENTO FROM (SELECT COUNT(DISTINCT IDCONTRATO) AS CUENTA, SEGMENTO FROM (SELECT TRUNC (((SYSDATE-DIA)/%2$d),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= (SELECT * FROM (SELECT TRUNC((SYSDATE - TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')),0) AS ANTIGUEDAD FROM CONTRATO ORDER BY ANTIGUEDAD DESC) WHERE ROWNUM = 1))) INNER JOIN (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, TRUNC((ANTIGUEDAD/%2$d),0) AS SEGI, TRUNC (((ANTIGUEDAD+DURACION)/%2$d),0) AS SEGII FROM (SELECT IDCONTRATO, COSTO, FECHAINIC, FECHAFINAL, (TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')-TO_DATE(FECHAINIC, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) AS DURACION, GREATEST ((SYSDATE-TO_DATE(FECHAFINAL, 'YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')), 0) AS ANTIGUEDAD FROM CONTRATO)) ON SEGMENTO >= SEGI AND SEGMENTO <= SEGII GROUP BY SEGMENTO ORDER BY CUENTA ASC) WHERE ROWNUM = 1))) ON INICIO != TERMINACION GROUP BY INICIO, TERMINACION)"
	    ,USUARIO, dias, tipo);

		prepStmt = conn.prepareStatement(sql);
		recursos.add(prepStmt);
		rs = prepStmt.executeQuery();
        
		while (rs.next()) {
			resp.add(convertResultSetToReqVII(rs));
		}
		
		sql = String.format("COMMIT"
				,USUARIO);
		
		prepStmt = conn.prepareStatement(sql);
		recursos.add(prepStmt);
		rs = prepStmt.executeQuery();
		
		return resp;                
	}

    public ReqVII convertResultSetToReqVII(ResultSet resultSet) throws SQLException {		
		
		Date empieza = resultSet.getDate("EMPIEZA");
		Date termina= resultSet.getDate("TERMINA");	
	
		ReqVII op = new ReqVII(empieza, termina);
		return op;
	}
}