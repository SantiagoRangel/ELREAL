package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import vos.Cliente;
import vos.Oferta;
import vos.ReqXII;
import vos.ReqXIII;

public class DAOReqXII {
	
	public final static String USUARIO = "ISIS2304A241810";
	/**
	 * Arraylist de recursos que se usan para la ejecución de sentencias SQL
	 */
	private ArrayList<Object> recursos;	
	/**
	 * Atributo que genera la conexión a la base de datos
	 */
	private Connection conn;

	/**
	 * Metodo constructor que crea DAOIngrediente
	 * <b>post: </b> Crea la instancia del DAO e inicializa el Arraylist de recursos
	 */
	public DAOReqXII() {
		recursos = new ArrayList<Object>();
	}

	/**
	 * Metodo que cierra todos los recursos que estan en el arreglo de recursos
	 * <b>post: </b> Todos los recurso del arreglo de recursos han sido cerrados
	 */
	public void cerrarRecursos() {
		for(Object ob : recursos){
			if(ob instanceof PreparedStatement)
				try {
					((PreparedStatement) ob).close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
		}
	}

	/**
	 * Metodo que inicializa la connection del DAO a la base de datos con la conexión que entra como parametro.
	 * @param con - connection a la base de datos
	 */
	public void setConn(Connection con){
		this.conn = con;
	}
	
	public ReqXII convertResultSetToReqXII(ResultSet resultSet) throws SQLException {		
		
		Integer semana = resultSet.getInt("SEMANA");
		Long peorOperador = resultSet.getLong("PEOROPERADOR");
		Long mejorOperador = resultSet.getLong("MEJOROPERADOR");
		Long peorOferta = resultSet.getLong("PEOROFERTA");	
		Long mejorOferta = resultSet.getLong("MEJOROFERTA");
	
		ReqXII cliente = new ReqXII(semana, peorOperador, mejorOperador, peorOferta, mejorOferta);
		return cliente;
	}	
	public ArrayList<ReqXII> getReqXII() throws SQLException, Exception 
	{
		ArrayList<ReqXII> ofertas = new ArrayList<ReqXII>();
		
		String sql = String.format("SELECT (NVL(SEGMENTOX,SEGMENTOXX)+NVL(SEGMENTOXX,SEGMENTOX))/2 AS SEMANA, MEJOROFERTA,PEOROFERTA,PEOROPERADOR,MEJOROPERADOR FROM (SELECT * FROM (SELECT SEGMENTOIII AS SEGMENTOX, MEJOROFERTA,PEOROFERTA FROM (SELECT SEG AS SEGMENTOIII, IDOFERTA AS MEJOROFERTA FROM (SELECT CUENTA, IDOFERTA, SEG, ROW_NUMBER() OVER(PARTITION BY SEG ORDER BY CUENTA DESC) AS RNK FROM (SELECT COUNT (*) AS CUENTA, IDOFERTA, SEG FROM (SELECT IDOFERTA, TRUNC(SEGMENTO/7,0) AS SEG FROM (SELECT * FROM (SELECT (TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD') - TO_DATE(OFERTA.FECHAINICIAL,  'YYYY-MM-DD')) AS TIEMPO, IDOFERTA, IDHABITACION AS HAB, IDAPARTAMENTO AS APT, IDVIVIENDA AS VIV, TRUNC((SYSDATE - TO_DATE(OFERTA.FECHAINICIAL,  'YYYY-MM-DD')),0) AS INI, TRUNC((SYSDATE - TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD')),0) AS FIN FROM OFERTA WHERE SYSDATE - TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD') <= 365) INNER JOIN (SELECT * FROM (SELECT TRUNC (((SYSDATE-DIA)),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= 365)) GROUP BY SEGMENTO) ON INI >= SEGMENTO AND FIN <= SEGMENTO) INNER JOIN (SELECT TRUNC((SYSDATE - TO_DATE(CONTRATO.FECHAINIC,  'YYYY-MM-DD')),0) AS CINI, TRUNC((SYSDATE - TO_DATE(CONTRATO.FECHAFINAL,  'YYYY-MM-DD')),0) AS CFIN, IDHABITACION AS CHAB, IDVIVIENDA AS CVIV, IDAPARTAMENTO AS CAPT, IDCONTRATO, NOCHES, CONTRATO.FECHAINIC AS FIC, CONTRATO.FECHAFINAL AS FFC FROM CONTRATO) ON NVL(HAB,0) = NVL(CHAB,0) AND NVL(APT,0) = NVL(CAPT,0) AND NVL(VIV,0) = NVL(CVIV,0) AND CINI<=INI AND CFIN>=FIN AND CINI >= SEGMENTO AND CFIN <= SEGMENTO) GROUP BY IDOFERTA, SEG ORDER BY SEG, CUENTA)) WHERE RNK = 1) INNER JOIN (SELECT SEG AS SEGMENTOIV, IDOFERTA AS PEOROFERTA FROM (SELECT CUENTA, IDOFERTA, SEG, ROW_NUMBER() OVER(PARTITION BY SEG ORDER BY CUENTA ASC) AS RNK FROM (SELECT COUNT (*) AS CUENTA, IDOFERTA, SEG FROM (SELECT IDOFERTA, TRUNC(SEGMENTO/7,0) AS SEG FROM (SELECT * FROM (SELECT (TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD') - TO_DATE(OFERTA.FECHAINICIAL,  'YYYY-MM-DD')) AS TIEMPO, IDOFERTA, IDHABITACION AS HAB, IDAPARTAMENTO AS APT, IDVIVIENDA AS VIV, TRUNC((SYSDATE - TO_DATE(OFERTA.FECHAINICIAL,  'YYYY-MM-DD')),0) AS INI, TRUNC((SYSDATE - TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD')),0) AS FIN FROM OFERTA WHERE SYSDATE - TO_DATE(OFERTA.FECHAFINAL,  'YYYY-MM-DD') <= 365) INNER JOIN (SELECT * FROM (SELECT TRUNC (((SYSDATE-DIA)),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= 365)) GROUP BY SEGMENTO) ON INI >= SEGMENTO AND FIN <= SEGMENTO) INNER JOIN (SELECT TRUNC((SYSDATE - TO_DATE(CONTRATO.FECHAINIC,  'YYYY-MM-DD')),0) AS CINI, TRUNC((SYSDATE - TO_DATE(CONTRATO.FECHAFINAL,  'YYYY-MM-DD')),0) AS CFIN, IDHABITACION AS CHAB, IDVIVIENDA AS CVIV, IDAPARTAMENTO AS CAPT, IDCONTRATO, NOCHES, CONTRATO.FECHAINIC AS FIC, CONTRATO.FECHAFINAL AS FFC FROM CONTRATO) ON NVL(HAB,0) = NVL(CHAB,0) AND NVL(APT,0) = NVL(CAPT,0) AND NVL(VIV,0) = NVL(CVIV,0) AND CINI<=INI AND CFIN>=FIN AND CINI >= SEGMENTO AND CFIN <= SEGMENTO) GROUP BY IDOFERTA, SEG ORDER BY SEG, CUENTA)) WHERE RNK = 1) ON SEGMENTOIII = SEGMENTOIV) FULL OUTER JOIN (SELECT SEGMENTOI AS SEGMENTOXX, PEOROPERADOR, MEJOROPERADOR FROM (SELECT IDOP AS PEOROPERADOR, SEGMENTO AS SEGMENTOI FROM (SELECT LOL, IDOP, SEGMENTO, ROW_NUMBER() OVER(PARTITION BY SEGMENTO ORDER BY LOL ASC) AS RNK FROM (SELECT COUNT (*) AS LOL ,SEGMENTO, IDOP FROM (SELECT SEGMENTO, IDOP FROM (SELECT * FROM (SELECT TRUNC (((SYSDATE-DIA)/7),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= 365)) GROUP BY SEGMENTO) INNER JOIN (SELECT IDOP, TRUNC(INICIO/7,0) AS INICIOV, TRUNC(FINALL/7,0) AS FINALLV FROM (SELECT IDOPERADOR AS IDOP, TRUNC(SYSDATE - TO_DATE(FECHAINIC,  'YYYY-MM-DD'), 0) AS INICIO, TRUNC(SYSDATE - TO_DATE(FECHAFINAL,  'YYYY-MM-DD'), 0) AS FINALL FROM CONTRATO) WHERE INICIO <= 365) ON INICIOV >= SEGMENTO AND FINALLV <= SEGMENTO) GROUP BY SEGMENTO, IDOP)) WHERE RNK = 1) INNER JOIN (SELECT IDOP AS MEJOROPERADOR, SEGMENTO AS SEGMENTOII FROM (SELECT LOL, IDOP, SEGMENTO, ROW_NUMBER() OVER(PARTITION BY SEGMENTO ORDER BY LOL DESC) AS RNK FROM (SELECT COUNT (*) AS LOL ,SEGMENTO, IDOP FROM (SELECT SEGMENTO, IDOP FROM (SELECT * FROM (SELECT TRUNC (((SYSDATE-DIA)/7),0) AS SEGMENTO FROM (SELECT TRUNC (SYSDATE - ROWNUM) AS DIA FROM DUAL CONNECT BY ROWNUM <= 365)) GROUP BY SEGMENTO) INNER JOIN (SELECT IDOP, TRUNC(INICIO/7,0) AS INICIOV, TRUNC(FINALL/7,0) AS FINALLV FROM (SELECT IDOPERADOR AS IDOP, TRUNC(SYSDATE - TO_DATE(FECHAINIC,  'YYYY-MM-DD'), 0) AS INICIO, TRUNC(SYSDATE - TO_DATE(FECHAFINAL,  'YYYY-MM-DD'), 0) AS FINALL FROM CONTRATO) WHERE INICIO <= 365) ON INICIOV >= SEGMENTO AND FINALLV <= SEGMENTO) GROUP BY SEGMENTO, IDOP)) WHERE RNK = 1) ON SEGMENTOII = SEGMENTOI) ON  SEGMENTOX = SEGMENTOXX)"
				,USUARIO);

		PreparedStatement prepStmt = conn.prepareStatement(sql);
		recursos.add(prepStmt);
		ResultSet rs = prepStmt.executeQuery();

		while (rs.next()) {
			ofertas.add(convertResultSetToReqXII(rs));
		}
				
		return ofertas;
	}
}
